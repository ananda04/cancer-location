% Description: This script finds cancerous, gray matter, and white matter
%              regions of a brain slice through a correlations based classifier.
% Author:      Arnav Nanda 
%              Apex High School 
%              Fitzpatrick Center for Interdisciplinary Engineering, Medicine and Applied Science (CIEMAS), Duke University 


load('ReconResults_Model_3_BrainScan_GBMT_FullFanExtent_400iter_M3.mat')
load('e2.mat')
imshow(e2)

redChannel = e2(:, :, 1);
greenChannel = e2(:, :, 2);
blueChannel = e2(:, :, 3);

% Create a mask of the background only.
mask = blueChannel > 200, redChannel > 200, greenChannel > 200;
figure(3); imshow(mask)
hold on;

[r c] = find(mask == 0)
L = length(r)
allspec = []
for k1 = 1:L
    allspec = cat(2, allspec, e2(r(k1),c(k1),:))
end
% creating array
allspec1 = [allspec(:,:,1)
            allspec(:,:,2)
            allspec(:,:,3)]
allspec2 = im2double(allspec1)

magnitude = sqrt(sum(allspec2.^2))
normallspec = allspec2./magnitude


% 25 choosen points 
ctable = e2(83,19,:)
cancer = [ctable(:,:,1), 
          ctable(:,:,2), 
          ctable(:,:,3)]

wmtable = e2(66,33,:)
whitem = [wmtable(:,:,1), 
          wmtable(:,:,2), 
          wmtable(:,:,3)]
gmtable = e2(64,10,:)
graym = [gmtable(:,:,1), 
         gmtable(:,:,2), 
         gmtable(:,:,3)]


%magnitude
magavgcancer = sqrt(sum(cancer.^2))
magavgwhitem = sqrt(sum(whitem.^2))
magavggraym = sqrt(sum(graym.^2))

%normalized
normavgcancer = cancer./magavgcancer
normavgwhitem = whitem./magavgwhitem
normavggraym = graym./magavggraym


similar = []
for d1 = 1:L
    simcancer = sum(normallspec(:,d1).*normavgcancer)
    simwhite = sum(normallspec(:,d1).*normavgwhitem)
    simgray = sum(normallspec(:,d1).*normavggraym)

    if simcancer > simwhite
        if simcancer > simgray
           similar = [similar, 1]
        else
        end
    end
    
    if simwhite > simcancer
        if simwhite > simgray
           similar = [similar, 2]
        else
        end
    end
    
    if simgray > simcancer
        if simgray > simwhite
           similar = [similar, 3]
        else
        end
    end
end

similar1 = transpose(similar)
figure(3); imshow(mask)
hold on;
for f1 = 1:L
    if similar1(f1) == 1
        figure(3); plot(c(f1),r(f1),'rx')
        hold on;
    elseif similar1(f1) == 2
        figure(3); plot(c(f1),r(f1),'gx')
        hold on;
    elseif similar1(f1) == 3
        figure(3); plot(c(f1),r(f1),'yx')
        hold on;
    end
end